# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import messenger_pb2 as messenger__pb2


class messengerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.chatter = channel.unary_stream(
        '/messenger/chatter',
        request_serializer=messenger__pb2.text.SerializeToString,
        response_deserializer=messenger__pb2.text.FromString,
        )
    self.read = channel.unary_unary(
        '/messenger/read',
        request_serializer=messenger__pb2.text.SerializeToString,
        response_deserializer=messenger__pb2.text.FromString,
        )
    self.login = channel.unary_unary(
        '/messenger/login',
        request_serializer=messenger__pb2.text.SerializeToString,
        response_deserializer=messenger__pb2.text.FromString,
        )
    self.lru = channel.unary_stream(
        '/messenger/lru',
        request_serializer=messenger__pb2.text.SerializeToString,
        response_deserializer=messenger__pb2.text.FromString,
        )


class messengerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def chatter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def read(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def login(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def lru(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_messengerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'chatter': grpc.unary_stream_rpc_method_handler(
          servicer.chatter,
          request_deserializer=messenger__pb2.text.FromString,
          response_serializer=messenger__pb2.text.SerializeToString,
      ),
      'read': grpc.unary_unary_rpc_method_handler(
          servicer.read,
          request_deserializer=messenger__pb2.text.FromString,
          response_serializer=messenger__pb2.text.SerializeToString,
      ),
      'login': grpc.unary_unary_rpc_method_handler(
          servicer.login,
          request_deserializer=messenger__pb2.text.FromString,
          response_serializer=messenger__pb2.text.SerializeToString,
      ),
      'lru': grpc.unary_stream_rpc_method_handler(
          servicer.lru,
          request_deserializer=messenger__pb2.text.FromString,
          response_serializer=messenger__pb2.text.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'messenger', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
